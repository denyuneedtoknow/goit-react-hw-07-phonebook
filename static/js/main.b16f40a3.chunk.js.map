{"version":3,"sources":["ContactList/ContactList.module.css","Filter/Filter.module.css","ContactForm/ContactForm.module.css","redux/Contacts/actions.js","Services/contactsAPI.js","redux/Contacts/operations.js","redux/Contacts/reducers.js","redux/store.js","redux/Contacts/selectors.js","ContactList/ContactList.js","Filter/Filter.js","ContactForm/ContactForm.js","App.js","index.js"],"names":["module","exports","filter","createAction","fetchContactsNew","a","axios","get","data","addContactNew","name","number","contact","post","deleteContactsNew","id","delete","target","defaults","baseURL","addContact","createAsyncThunk","contactsAPI","contacts","deleteContact","fetchContacts","contactList","createReducer","fulfilled","state","action","payload","actions","_","loading","rejected","pending","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","reducer","contactReducer","devTools","process","getContacts","getLoading","normalizedContact","createSelector","loweredFilter","toLowerCase","includes","connect","isLoading","dispatch","useEffect","type","color","height","width","map","className","s","contactName","contactNumber","addBtn","onClick","handler","e","value","label","inputTitle","input","onChange","onSubmit","useState","setName","setNumber","handleChange","resetForm","nameId","uuidv4","numberId","form","preventDefault","find","alert","htmlFor","pattern","title","required","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b16f40a3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"ContactList_contacts__2ZoMd\",\"addBtn\":\"ContactList_addBtn__2_Jrl\",\"contactName\":\"ContactList_contactName__27iAz\",\"contactNumber\":\"ContactList_contactNumber__3-Lnf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__2_QKz\",\"inputTitle\":\"Filter_inputTitle__3j9ce\",\"input\":\"Filter_input__2pwWb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1QZOx\",\"label\":\"ContactForm_label__33AgA\",\"input\":\"ContactForm_input__3JuQ_\",\"addBtn\":\"ContactForm_addBtn__1unZc\",\"inputTitle\":\"ContactForm_inputTitle__32B89\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\n\r\n\r\n\r\n// export const addContact = createAction(\"contacts/add\", ({ name, number }) => ({\r\n//   payload: { id: uuidv4(), name, number }\r\n// }));\r\n\r\nexport const addContactRequest = createAction(\"contacts/addRequest\")\r\nexport const addContactSuccess = createAction(\"contacts/addSuccess\")\r\nexport const addContactFail = createAction(\"contacts/addFail\")\r\n\r\nexport const deleteContactRequest = createAction(\"contacts/deleteRequest\")\r\nexport const deleteContactSuccess = createAction(\"contacts/deleteSuccess\")\r\nexport const deleteContactFail = createAction(\"contacts/deleteFail\")\r\n\r\nexport const fetchContactsRequest = createAction(\"contacts/fetchRequest\")\r\nexport const fetchContactsSuccess = createAction(\"contacts/fetchSuccess\")\r\nexport const fetchContactsFail = createAction(\"contacts/fetchFail\")\r\n\r\n\r\n\r\n\r\nexport const filter = createAction(\"contacts/filter\")\r\nexport const deleteContact = createAction(\"contacts/delete\")","import axios from 'axios'\r\n\r\naxios.defaults.baseURL = 'https://6193c189d3ae6d0017da8819.mockapi.io'\r\n\r\n\r\n\r\nexport async function fetchContactsNew() {\r\n    const { data } = await axios.get('/contacts')\r\n    return data\r\n}\r\n\r\nexport async function addContactNew({ name, number }) {\r\n    const contact = { name, number };\r\n    const data = axios.post('/contacts', contact)\r\n    return data\r\n}\r\n\r\nexport async function deleteContactsNew(id) {\r\n    const { data } = await axios.delete(`/contacts/${id.target.id}`);\r\n    return data;\r\n}\r\n\r\n","import axios from 'axios'\r\nimport { createAsyncThunk, } from '@reduxjs/toolkit'\r\nimport * as contactsAPI from '../../Services/contactsAPI'\r\n\r\naxios.defaults.baseURL = 'https://6193c189d3ae6d0017da8819.mockapi.io'\r\n\r\nexport const addContact = createAsyncThunk(\r\n    \"contacts/addContact\",\r\n    async ({ name, number }) => {\r\n        const contacts = await contactsAPI.addContactNew({ name, number })\r\n        return contacts;\r\n    }\r\n);\r\nexport const deleteContact = createAsyncThunk(\r\n    \"contacts/deleteContacts\",\r\n    async (id) => {\r\n        const data = await contactsAPI.deleteContactsNew(id)\r\n        return data\r\n    }\r\n)\r\n\r\nexport const fetchContacts = createAsyncThunk(\r\n    \"contacts/fetchContacts\",\r\n    async () => {\r\n        const contacts = await contactsAPI.fetchContactsNew()\r\n        return contacts;\r\n    }\r\n);\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport * as actions from \"./actions\";\r\nimport { fetchContacts, addContact, deleteContact } from \"./operations\"\r\n\r\n\r\nconst initState = [];\r\n\r\n\r\n\r\nconst contactList = createReducer(initState, {\r\n  [fetchContacts.fulfilled]: (state, action) => {\r\n    return action.payload\r\n  },\r\n  [addContact.fulfilled]: (state, action) => {\r\n    // if (\r\n    //   state.find((contact) => {\r\n    //     return contact.name === action.payload.name;\r\n    //   })\r\n    // ) {\r\n    //   alert(`Sorry, contact ${action.payload.name} already existing`);\r\n    //   return state;\r\n    // } else {\r\n\r\n    return [...state, action.payload.data];\r\n\r\n  },\r\n\r\n  [deleteContact.fulfilled]: (state, action) => {\r\n    const newState = state.filter(\r\n      (contact) => contact.id !== action.payload.id\r\n    );\r\n\r\n    return newState;\r\n  },\r\n});\r\n\r\n\r\nconst filter = createReducer(\"\", {\r\n  [actions.filter]: (_, action) => action.payload,\r\n});\r\n\r\nconst loading = createReducer(false, { [addContact.fulfilled]: () => false, [addContact.rejected]: () => false, [addContact.pending]: () => true, [deleteContact.fulfilled]: () => false, [deleteContact.rejected]: () => false, [deleteContact.pending]: () => true, [fetchContacts.fulfilled]: () => false, [fetchContacts.rejected]: () => false, [fetchContacts.pending]: () => true, })\r\nexport default combineReducers({\r\n  contacts: contactList,\r\n  filter: filter,\r\n  loading: loading,\r\n});\r\n","\r\nimport contactReducer from \"../redux/Contacts/reducers\";\r\nimport {\r\n  configureStore,\r\n  // combineReducers,\r\n  getDefaultMiddleware,\r\n} from \"@reduxjs/toolkit\";\r\nimport {\r\n  // persistStore,\r\n  // persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\n// import storage from \"redux-persist/lib/storage\";\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\n\r\n// const persistConfig = {\r\n//   key: \"root\",\r\n//   storage,\r\n// };\r\n\r\n// const persistedReducer = persistReducer(persistConfig, contactReducer);\r\n\r\nexport const store = configureStore({\r\n  reducer: contactReducer,\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\n// export const persistor = persistStore(store);\r\n","import { createSelector } from 'reselect'\r\n\r\n\r\nexport const getContacts = state => state.contacts\r\nexport const getFilter = state => state.filter\r\nexport const getLoading = state => state.loading\r\n\r\n\r\n\r\n// export const normalizedContact = state => {\r\n//     const filter = getFilter(state)\r\n//     const contacts = getContacts(state)\r\n//     const loweredFilter = filter.toLowerCase()\r\n//     return contacts.filter((contact) =>\r\n//         contact.name.toLowerCase().includes(loweredFilter))\r\n// }\r\n\r\n\r\nexport const normalizedContact = createSelector([getFilter, getContacts], (filter, contacts) => {\r\n    const loweredFilter = filter.toLowerCase()\r\n    return contacts.filter((contact) =>\r\n        contact.name.toLowerCase().includes(loweredFilter))\r\n})","import s from \"./ContactList.module.css\";\r\nimport { useEffect, } from 'react'\r\nimport { connect, } from \"react-redux\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport { normalizedContact, getLoading } from '../redux/Contacts/selectors'\r\nimport { addContact, deleteContact, fetchContacts } from '../redux/Contacts/operations'\r\n\r\n\r\nfunction ContactList({ contacts, deleteContact, fetchContacts, isLoading }) {\r\n\r\n\r\n  useEffect(() => {\r\n    fetchContacts()\r\n  }, [fetchContacts]);\r\n\r\n  return (\r\n    <>\r\n      {isLoading && <Loader type=\"Bars\" color=\"#00008B\" height={120} width={120} />}\r\n      {contacts.map((contact) => (\r\n        <div className={s.contacts} key={contact.id}>\r\n          <p id={contact.id} className={s.contactName}>\r\n            {contact.name}\r\n          </p>\r\n          <p className={s.contactNumber}>{contact.number}</p>\r\n          <button className={s.addBtn} id={contact.id} onClick={deleteContact}>\r\n            Delete\r\n          </button>\r\n\r\n        </div>\r\n      ))}\r\n\r\n    </>\r\n  );\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: normalizedContact(state),\r\n  isLoading: getLoading(state)\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  addContact: () => dispatch(addContact()),\r\n  deleteContact: (id) => dispatch(deleteContact(id)),\r\n  fetchContacts: () => dispatch(fetchContacts())\r\n\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);","import { connect, } from \"react-redux\";\r\nimport * as actions from \"../redux/Contacts/actions\";\r\nimport s from \"./Filter.module.css\";\r\n\r\nfunction Filter({ data, handler }) {\r\n  return (\r\n    <label className={s.label}>\r\n      <p className={s.inputTitle}>Find</p>\r\n      <input\r\n        className={s.input}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={data}\r\n        onChange={handler}\r\n      ></input>\r\n    </label>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  data: state.filter,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  handler: (e) => dispatch(actions.filter(e.target.value))\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","import { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport s from \"./ContactForm.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { addContact, deleteContact } from '../redux/Contacts/operations'\r\nimport { getContacts } from '../redux/Contacts/selectors'\r\n\r\nfunction ContactForm({ onSubmit, contacts }) {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    switch (name) {\r\n      case \"name\":\r\n        setName(value);\r\n        break;\r\n      case \"number\":\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  const submit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (\r\n      contacts.find((contact) => {\r\n\r\n        return contact.name === name;\r\n      })\r\n    ) {\r\n      alert(`Sorry, contact ${name} already existing`);\r\n      resetForm();\r\n      return\r\n    };\r\n    onSubmit({ name, number });\r\n    resetForm();\r\n  }\r\n\r\n  const nameId = uuidv4();\r\n  const numberId = uuidv4();\r\n\r\n  return (\r\n    <form className={s.form} onSubmit={submit}>\r\n      <label className={s.label} htmlFor={nameId}>\r\n        <p className={s.inputTitle}>Name</p>\r\n        <input\r\n          className={s.input}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          value={name}\r\n          id={nameId}\r\n          onChange={handleChange}\r\n        ></input>\r\n      </label>\r\n      <label className={s.label} htmlFor={numberId}>\r\n        <p className={s.inputTitle}>Phone</p>\r\n        <input\r\n          className={s.input}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          value={number}\r\n          id={numberId}\r\n          onChange={handleChange}\r\n        ></input>\r\n      </label>\r\n      <button className={s.addBtn} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  contacts: getContacts(state)\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onSubmit: ({ name, number }) =>\r\n    dispatch(addContact({ name, number })),\r\n  deleteContact: (id) => dispatch(deleteContact(id))\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import React from \"react\";\r\n\r\nimport \"./App.css\";\r\nimport ContactList from \"./ContactList/ContactList\";\r\nimport Filter from \"./Filter/Filter\";\r\nimport ContactForm from \"./ContactForm/ContactForm\";\r\n\r\n\r\nfunction App() {\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Phonebook</h1>\r\n      <ContactForm />\r\n\r\n      <Filter />\r\n      <h2>Contacts</h2>\r\n      <ContactList />\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default App","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport { Provider } from \"react-redux\";\r\nimport { store, } from \"./redux/store\";\r\n// import { PersistGate } from \"redux-persist/integration/react\";\r\n// import { store, persistor } from \"./redux/store\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      {/* <PersistGate loading={null} persistor={persistor}> */}\r\n      <App />\r\n      {/* </PersistGate> */}\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}